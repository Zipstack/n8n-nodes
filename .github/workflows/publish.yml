name: Publish Package to NPM
on:
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # Extract version from release tag
      - name: Extract version from release
        id: extract_version
        run: |
          # Get the release tag name and remove 'v' prefix if present
          VERSION="${{ github.event.release.tag_name }}"
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      # Configure git for commits
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          registry-url: "https://registry.npmjs.org"

      # Update package.json version
      - name: Update package.json version
        run: |
          npm version ${{ steps.extract_version.outputs.version }} --no-git-tag-version
          echo "Updated package.json to version ${{ steps.extract_version.outputs.version }}"

      # Install dependencies (this will update package-lock.json with new version)
      - run: npm ci

      # Verify the version was updated correctly
      - name: Verify version update
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Package.json version: $PACKAGE_VERSION"
          echo "Release version: ${{ steps.extract_version.outputs.version }}"
          if [ "$PACKAGE_VERSION" != "${{ steps.extract_version.outputs.version }}" ]; then
            echo "Version mismatch! Exiting..."
            exit 1
          fi

      # Commit and push version changes to main
      - name: Commit version changes
        run: |
          git add package.json package-lock.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update version to ${{ steps.extract_version.outputs.version }} [skip ci]"
            git push origin HEAD:main
            echo "Committed and pushed version changes to main branch"
          fi

      # Build the package
      - run: npm run build

      # Publish to npm
      - run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
